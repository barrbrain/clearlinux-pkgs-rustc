From 871bf068122d05ad23ca059c165038f7c59313a0 Mon Sep 17 00:00:00 2001
From: William Douglas <william.douglas@intel.com>
Date: Wed, 23 Aug 2017 18:22:35 +0000
Subject: [PATCH] Update stage0-sysroot incremental lib directory

Since Clear Linux uses /usr/lib64 as its libdir path, the bootstrap
process will fail due to rustc looking for the stage0-sysroot
incremental lib directory in lib64 instead of lib. This patch fixes the
path to lib64 instead.
---
 src/bootstrap/dist.rs | 4 ++--
 src/bootstrap/lib.rs  | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/bootstrap/dist.rs b/src/bootstrap/dist.rs
index 6d696df..d703ee9 100644
--- a/src/bootstrap/dist.rs
+++ b/src/bootstrap/dist.rs
@@ -413,9 +413,9 @@ pub fn std(build: &Build, compiler: &Compiler, target: &str) {
     let image = tmpdir(build).join(format!("{}-{}-image", name, target));
     let _ = fs::remove_dir_all(&image);
 
-    let dst = image.join("lib/rustlib").join(target);
+    let dst = image.join("lib64/rustlib").join(target);
     t!(fs::create_dir_all(&dst));
-    let src = build.sysroot(compiler).join("lib/rustlib");
+    let src = build.sysroot(compiler).join("lib64/rustlib");
     cp_r(&src.join(target), &dst);
 
     let mut cmd = rust_installer(build);
diff --git a/src/bootstrap/lib.rs b/src/bootstrap/lib.rs
index 00cbc58..39945a3 100644
--- a/src/bootstrap/lib.rs
+++ b/src/bootstrap/lib.rs
@@ -635,7 +635,7 @@ impl Build {
     /// Returns the libdir where the standard library and other artifacts are
     /// found for a compiler's sysroot.
     fn sysroot_libdir(&self, compiler: &Compiler, target: &str) -> PathBuf {
-        self.sysroot(compiler).join("lib").join("rustlib")
+        self.sysroot(compiler).join("lib64").join("rustlib")
             .join(target).join("lib")
     }
 
-- 
2.14.1

